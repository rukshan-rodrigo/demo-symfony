<?php

namespace Ges\EnquiryBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;

/**
 * EnquiryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EnquiryRepository extends EntityRepository
{
    /**
     *Search enquiry Enquiries according to the given parameters
     * this sill search only for given parameters and method itself filer for given parameters
     *
     * @param \Ges\EnquiryBundle\Entity\Enquiry $searchData
     * @return Array
     */
    public function findEnquiries($searchData)
    {

        $query = $this->createQueryBuilder('i');
        /**
         * if data is set query from database
         */
        if ($searchData['family_name']) {
            $query
                ->andWhere('i.family_name = :family_name')
                ->setParameter('family_name', $searchData['family_name']);
        }
        if ($searchData['first_name']) {
            $query
                ->andWhere('i.first_name = :first_name')
                ->setParameter('first_name', $searchData['first_name']);
        }
        if ($searchData['file_name']) {
            $query
                ->andWhere('i.file_name = :file_name')
                ->setParameter('file_name', $searchData['file_name']);
        }
        if ($searchData['country']) {
            $query
                ->andWhere('i.country = :country')
                ->setParameter('country', $searchData['country']);
        }
        if ($searchData['date_from'] && $searchData['date_to']) {
            $query
                ->andWhere('i.enquiry_date BETWEEN :date_from AND :date_to')
                ->setParameter('date_from', $searchData['date_from']);
            $query
                ->setParameter('date_to', $searchData['date_to']);
        }
        if ($searchData['department']) {
            $query
                ->andWhere('i.department_id = :department')
                ->setParameter('department', $searchData['department']);
        }
        if ($searchData['enquiry_type']) {
            $query
                ->andWhere('i.enquiry_type_id = :enquiry_type')
                ->setParameter('enquiry_type', $searchData['enquiry_type']);
        }
        if ($searchData['enquiry_level']) {
            $query
                ->andWhere('i.enquiry_level_id = :enquiry_level')
                ->setParameter('enquiry_level', $searchData['enquiry_level']);
        }
        if ($searchData['is_approved'] === 1 || $searchData['is_approved'] === 0) {
            $query
                ->andWhere('i.is_approved = :is_approved')
                ->setParameter('is_approved', $searchData['is_approved']);
        }

        return $query->getQuery()->getResult();

    }

    /**
     * Return the enquiry enquiries records that fall within the given date range
     *
     * @param $searchData Array
     * @return Array
     */
    public function findEnquiriesByDates($searchData,$tableAlias='i')
    {
        $query = $this->createQueryBuilder($tableAlias);
        $query->getEntityManager()->getConfiguration()->addCustomDatetimeFunction('DATE','Ges\EnquiryBundle\DQL\Date');
        if (isset($searchData['date_from']) && $searchData['date_from']!=='' && isset($searchData['date_to']) && $searchData['date_to']!=='') {
            $query
                ->select($tableAlias)->addSelect('b.name as department_name')->addSelect('it.name as enquiry_type_name')->addSelect('il.name as enquiry_level_name')
                ->join($tableAlias.'.department_id','b')->join($tableAlias.'.enquiry_type_id','it')->join($tableAlias.'.enquiry_level_id','il')
                ->andWhere('DATE('.$tableAlias.'.enquiry_date) >= DATE(:date_from) AND DATE('.$tableAlias.'.enquiry_date) <= DATE(:date_to)')
                ->setParameter('date_from', $searchData['date_from'])
                ->setParameter('date_to', $searchData['date_to'])
                ->orderBy('i.enquiry_date','DESC');
        }

        return $query->getQuery()->getScalarResult(); //Result(Query::HYDRATE_SCALAR);
    }

    /**
     * Finds and returns the first year in which an enquiry has been recorded
     * @return DateTime
     */
    public function findFirstEnquiryYear()
    {
        $query = $this->createQueryBuilder('i')->
            where('i.enquiry_date != :emptydate')->
            setParameter('emptydate', '0000:00:00 00:00:00')->
            orderBy('i.enquiry_date', 'ASC')->
            setMaxResults(1)->
            getQuery();
        $enquiry = $query->getSingleResult();
        return $enquiry->getEnquiryDate();
    }

    /**
     * Select all details from enquiry table
     */
    public function findAllData(){
        $query = $this->createQueryBuilder('i');
        $query->addSelect('i');
        return $query->getQuery();
    }

}
